<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>Geekiter</title><link>https://blog.chenkeyan.com</link><description>ExploreX, To be myself.</description><copyright>Geekiter</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://avatars.githubusercontent.com/u/20443506?v=4</url><title>avatar</title><link>https://blog.chenkeyan.com</link></image><lastBuildDate>Tue, 05 Mar 2024 03:55:48 +0000</lastBuildDate><managingEditor>Geekiter</managingEditor><ttl>60</ttl><webMaster>Geekiter</webMaster><item><title>240305Note: Front-end engineer interview questions</title><link>https://blog.chenkeyan.com/post/240305Note%3A%20Front-end%20engineer%20interview%20questions.html</link><description>## React&#13;
&#13;
### 一、组件基础&#13;
&#13;
1/8 3月5日11:53&#13;
&#13;
#### 1. React 事件机制&#13;
&#13;
&#13;
&#13;
- react在document处监听了所有事件，当事件发生并冒泡到document，将事件内容封装成合成事件并交给真正的处理函数处理&#13;
	- 没有将click事件绑定到真是的dom上，所以要用event.preventDefault()阻止事件冒泡，而不是event.stopPropagation()方法&#13;
	- 好处：&#13;
		- 减少了内存的消耗&#13;
		- 让组件挂载销毁时统一订阅和移除事件&#13;
		- 抹平浏览器之间的兼容性&#13;
&#13;
#### 4. React 高阶组件、Render props、hooks 有什么区别，为什么要不断迭代&#13;
&#13;
&#13;
#### 5. 对React-Fiber的理解，它解决了什么问题？&#13;
&#13;
&#13;
#### 9. React 高阶组件是什么，和普通组件有什么区别，适用什么场景&#13;
&#13;
&#13;
#### 11. 哪些方法会触发 React 重新渲染？重新渲染 render 会做些什么？&#13;
&#13;
&#13;
#### 14. 对有状态组件和无状态组件的理解及使用场景&#13;
&#13;
#### 23. React中什么是受控组件和非控组件？&#13;
&#13;
&#13;
#### 28. 类组件与函数组件有什么异同？。</description><guid isPermaLink="true">https://blog.chenkeyan.com/post/240305Note%3A%20Front-end%20engineer%20interview%20questions.html</guid><pubDate>Tue, 05 Mar 2024 03:54:23 +0000</pubDate></item><item><title>240304Note: 竹云 前端</title><link>https://blog.chenkeyan.com/post/240304Note%3A%20-zhu-yun-%20-qian-duan.html</link><description>5.跨域问题&#13;
- 同源策略，限制一个源origin的文档与脚本与另一个源进行交互，如果协议、域名或者端口有一个不同就会视为不同的源。</description><guid isPermaLink="true">https://blog.chenkeyan.com/post/240304Note%3A%20-zhu-yun-%20-qian-duan.html</guid><pubDate>Mon, 04 Mar 2024 08:43:25 +0000</pubDate></item><item><title>240304Note: 博世-前端-一面</title><link>https://blog.chenkeyan.com/post/240304Note%3A%20-bo-shi---qian-duan---yi-mian.html</link><description>&#13;
1、自我介绍  &#13;
2、介绍下项目&#13;
  &#13;
1、你项目都是vue3做的吗  &#13;
2、怎么用vuex不用pinia&#13;
vuex是官方库&#13;
4、vite有了解吗（不知）  &#13;
5、jwt后端签发的吗 &#13;
是&#13;
6、说下闭包&#13;
允许一个函数访问并操作函数外部变量，闭包发生在一个函数内部创建另一个函数时&#13;
```js&#13;
function createCounter(){&#13;
	let count = 0;&#13;
	return function(){&#13;
		count++;&#13;
		return count;&#13;
	}&#13;
}&#13;
&#13;
const counter = createCounter();&#13;
console.log(counter()); //1&#13;
console.log(counter()); //2&#13;
```&#13;
7、你们项目管理用git了吗  &#13;
8、osi七层模型？看我不知道又换了个说法，url从点击到显示过程中用到了哪些协议  &#13;
- 应用层&#13;
- 表示层&#13;
- 会话层&#13;
- 传输层&#13;
- 网络层&#13;
- 数据链路层&#13;
- 物理层&#13;
9、响应式原理说说（感觉很高频，每次面试几乎都有，我从vue2和vue3的区别扯到ref和reactive）  &#13;
Vue.js的响应式系统基于JavaScript对象属性访问器，getter和setter，以及现代浏览器的proxy对象，&#13;
&#13;
技术问题就到此结束了，人家跟我说如果来了有完善的培养体系 。</description><guid isPermaLink="true">https://blog.chenkeyan.com/post/240304Note%3A%20-bo-shi---qian-duan---yi-mian.html</guid><pubDate>Mon, 04 Mar 2024 07:11:54 +0000</pubDate></item><item><title>240303Note: 金山云 前端 一面</title><link>https://blog.chenkeyan.com/post/240303Note%3A%20-jin-shan-yun-%20-qian-duan-%20-yi-mian.html</link><description>1.flex布局实现垂直置顶，靠右对齐  &#13;
&#13;
- 创建一个容器&#13;
- 设置flex方向&#13;
- 垂直对齐&#13;
```css&#13;
.container{&#13;
	display: flex;&#13;
	align-items: flex-start; &#13;
	justify-content: flex-end;&#13;
}&#13;
```&#13;
- 水平对齐&#13;
&#13;
2.align-content和align-self的区别  &#13;
- align-content控制的是多行或多列的整体对齐方式，align-self控制的是容器内单个项目的对齐方式&#13;
3.箭头函数和普通函数的区别 &#13;
```js&#13;
const square = function(x){&#13;
	return x * x;&#13;
}&#13;
&#13;
const squareArrow = x =&gt; x *x;&#13;
```&#13;
- 语法简洁&#13;
	- 箭头函数简洁&#13;
	- this的绑定，箭头函数不绑定自己的this，捕获上下文的this。</description><guid isPermaLink="true">https://blog.chenkeyan.com/post/240303Note%3A%20-jin-shan-yun-%20-qian-duan-%20-yi-mian.html</guid><pubDate>Sun, 03 Mar 2024 04:49:32 +0000</pubDate></item><item><title>240227Note: 数字马力-前端-一面</title><link>https://blog.chenkeyan.com/post/240227Note%3A%20-shu-zi-ma-li---qian-duan---yi-mian.html</link><description># 数字马力 前端一面 时间50分钟&#13;
&#13;
1.项目介绍，亮点  &#13;
&#13;
&#13;
2.路由怎么实现的，react-router cacherouter是干嘛的，hash router和history router的区别  &#13;
&#13;
1. 安装react-router-dom&#13;
2. 创建路由组件&#13;
3. 使用BrowserRouter或HashRouter包裹应用&#13;
4. 在组件中使用Link进行导航&#13;
&#13;
其中Browser或HashRouter包裹应用&#13;
```javascript&#13;
import {BrowserRouter as Router, Route, Switch} from "react-router-dom";&#13;
&#13;
function App(){&#13;
	return (&#13;
		&lt;Router&gt;&#13;
			&lt;Switch&gt;&#13;
				&lt;Route path="/path" component={Home} /&gt;&#13;
				&lt;Route path="/about" component={About} /&gt;&#13;
			&lt;/Switch&gt;&#13;
		&lt;/Router&gt;&#13;
	)&#13;
}&#13;
```&#13;
&#13;
使用Link&#13;
```js&#13;
import {Link} from "react-router-dom";&#13;
function Navigation(){&#13;
	return (&#13;
		&lt;nav&gt;&#13;
			&lt;ul&gt;&#13;
				&lt;li&gt;&lt;Link to="/home"&gt;Home&lt;/Link&gt;&lt;/li&gt;&#13;
				&lt;li&gt;&lt;Link to="/about"&gt;About&lt;/Link&gt;&lt;/li&gt;&#13;
			&lt;/ul&gt;&#13;
		&lt;/nav&gt;&#13;
	)&#13;
}&#13;
```&#13;
&#13;
3.useffect怎么实现副作用的，怎么在卸载前取消订阅  &#13;
&#13;
```js&#13;
import React, {useState, useEffect} from "react";&#13;
&#13;
function ExampleComponent(){&#13;
	const [data, setData] = useState(null);&#13;
	useEffect(()=&gt;{&#13;
		const fetchDate = async () =&gt; {&#13;
			const result = await fetch("http://api.com");&#13;
			const jsonData = await result.json();&#13;
			setData(jsonData);&#13;
		}&#13;
&#13;
		return ()={&#13;
		//返回的清理函数在组件卸载时执行，用于取消订阅或执行其他清理操作。</description><guid isPermaLink="true">https://blog.chenkeyan.com/post/240227Note%3A%20-shu-zi-ma-li---qian-duan---yi-mian.html</guid><pubDate>Tue, 27 Feb 2024 13:44:50 +0000</pubDate></item><item><title>240226Note：阿里-前端</title><link>https://blog.chenkeyan.com/post/240226Note%EF%BC%9A-a-li---qian-duan.html</link><description>1. 项目难点&#13;
&#13;
Web移动端调取摄像头，录制内容实时渲染在界面上，可以拖拽和隐藏，&#13;
&#13;
- 调取摄像头：video标签，js里用navigator.mediaDevices.getUserMedia({video: true})，video.srbObject = stream;&#13;
- 拖拽&#13;
	- 添加mousemove和mouseup事件，获取clientX、offsetLeft和clientY和offsetTop&#13;
	- 隐藏用display属性&#13;
- 自定义视频播放器事件，完成课前人脸识别打卡，课中暂停随堂检测，通过Websocket实时记录时长&#13;
	- 自定义视频播放器事件：包括paly,ended,pause&#13;
	- 通过Websocket实时记录时长，通过new 一个Websocket对象&#13;
- 自定义axios网络请求拦截，完成token注入和刷新，权限验证&#13;
	- 通过interceptors.request.use和interceptors.response.use&#13;
&#13;
CSS&#13;
&#13;
1. CSS 盒模型&#13;
2. 定位 Position&#13;
3. 水平/垂直居中&#13;
	1. ### 水平居中&#13;
		1. #### 行内元素水平居中（文本、内联元素等）&#13;
			1. text-align: center;&#13;
		2. ####  块级元素水平居中（有固定宽度）&#13;
			1. width: 300px; /* 设置容器宽度 */ margin: 0 auto; /* 将左右外边距设为 auto */&#13;
		3. ####  Flexbox 水平居中&#13;
			1. display: flex; justify-content: center;&#13;
	2. ### 垂直居中&#13;
		1. ####  单行文本垂直居中&#13;
			1. height: 100px; /* 设置容器高度 */ line-height: 100px; /* 与容器高度相同 */&#13;
		2. #### 多行文本垂直居中&#13;
			1. 可以使用 Flexbox 或者 CSS Grid 来实现垂直居中。</description><guid isPermaLink="true">https://blog.chenkeyan.com/post/240226Note%EF%BC%9A-a-li---qian-duan.html</guid><pubDate>Mon, 26 Feb 2024 13:53:17 +0000</pubDate></item><item><title>240213Note: 喜马拉雅Java一面</title><link>https://blog.chenkeyan.com/post/240213Note%3A%20-xi-ma-la-ya-Java-yi-mian.html</link><description># JDK17有啥新特性&#13;
&#13;
1. 封闭类，sealed classes，限制那些类可以拓展和实现某个类&#13;
2. switch语句的模式匹配&#13;
3. jvm启动时处理并行线程&#13;
&#13;
# 如何使用Git进行版本控制&#13;
初始化：git init&#13;
添加到暂存区：git add&#13;
提交更改：git commit&#13;
提交到远程仓库：git push&#13;
&#13;
# 为什么用RabbitMQ&#13;
&#13;
RabbitMQ是一个流行的开源信息代理软件，被用于构建分布式系统和大规模信息传递。</description><guid isPermaLink="true">https://blog.chenkeyan.com/post/240213Note%3A%20-xi-ma-la-ya-Java-yi-mian.html</guid><pubDate>Tue, 13 Feb 2024 13:57:20 +0000</pubDate></item><item><title>240207笔记：快手Java一面</title><link>https://blog.chenkeyan.com/post/240207-bi-ji-%EF%BC%9A-kuai-shou-Java-yi-mian.html</link><description>&#13;
&#13;
# MySQL最左匹配&#13;
&#13;
在MySQL中，"最左匹配"是指在多列索引中，MySQL只能利用索引的最左边的部分列进行索引查找。</description><guid isPermaLink="true">https://blog.chenkeyan.com/post/240207-bi-ji-%EF%BC%9A-kuai-shou-Java-yi-mian.html</guid><pubDate>Wed, 07 Feb 2024 13:23:46 +0000</pubDate></item><item><title>240203Note: Combine two sorted arrays</title><link>https://blog.chenkeyan.com/post/240203Note%3A%20Combine%20two%20sorted%20arrays.html</link><description>思路：&#13;
虽然也是在双指针，但是这一题是从后面开始遍历的。</description><guid isPermaLink="true">https://blog.chenkeyan.com/post/240203Note%3A%20Combine%20two%20sorted%20arrays.html</guid><pubDate>Sat, 03 Feb 2024 06:32:04 +0000</pubDate></item><item><title>231206笔记：next-auth</title><link>https://blog.chenkeyan.com/post/231206-bi-ji-%EF%BC%9Anext-auth.html</link><description>Q1: 如何在webstorm中调试next.js，包括前后端代码&#13;
&#13;
- 后端debug&#13;
&#13;
1. debug模式启动dev服务器&#13;
&#13;
- 前端debug&#13;
&#13;
1. 配置JavaScript Debug，输入前端url地址&#13;
&#13;
Q2：postgresql docker 的管理员账号&#13;
&#13;
账号一般是：postgresql&#13;
密码在配置docker的POSTGRES_PASSWORD中&#13;
&#13;
Q3：windows抓包软件&#13;
&#13;
Reqable&#13;
&#13;
Q4: next-auth本地配置github，登陆之后404&#13;
&#13;
本地地址github无法回调，只能部署&#13;
&#13;
Q5：next.js如何获取request ip&#13;
&#13;
从request.headers['x-forwarded-for']中获取&#13;
&#13;
Q6: ip获取到的是::1&#13;
&#13;
是ipv6的本地地址&#13;
&#13;
Q7：prisma中用enum定义字段， 创建的如何写？&#13;
&#13;
举例，如果定义了一个enum类型的字段，如下：&#13;
```js&#13;
enum System{&#13;
    WINDOWS&#13;
    LINUX&#13;
    MAC&#13;
}&#13;
```&#13;
&#13;
那么在创建的时候，需要写成：&#13;
```js&#13;
await prisma.system.create({&#13;
    data:{&#13;
        name: 'WINDOWS' as System&#13;
    }&#13;
})&#13;
```&#13;
&#13;
Q8: nextauth有那些callback？&#13;
&#13;
session、jwt、redirect、signIn&#13;
&#13;
session没登陆成功前会调用，然后登陆成功之后手动调用才会触发&#13;
&#13;
jwt只有在使用json web token的时候才会调用&#13;
&#13;
redirect是在调整地址的时候调用，一般没什么用&#13;
&#13;
signIn是在登陆成功前调用&#13;
&#13;
Q9: next.js的server component如何用点击事件？&#13;
&#13;
点击封装成一个组件，如何导入。</description><guid isPermaLink="true">https://blog.chenkeyan.com/post/231206-bi-ji-%EF%BC%9Anext-auth.html</guid><pubDate>Wed, 06 Dec 2023 02:30:31 +0000</pubDate></item><item><title>231101笔记：padavan hiboy的clash失效事件</title><link>https://blog.chenkeyan.com/post/231101-bi-ji-%EF%BC%9Apadavan%20hiboy-de-clash-shi-xiao-shi-jian.html</link><description>当生活节奏慢下来，我再也无法忍受如此糟糕的国际漫游网络，于是我决定对路由器进行一些调整。</description><guid isPermaLink="true">https://blog.chenkeyan.com/post/231101-bi-ji-%EF%BC%9Apadavan%20hiboy-de-clash-shi-xiao-shi-jian.html</guid><pubDate>Tue, 05 Dec 2023 13:15:32 +0000</pubDate></item><item><title>231125笔记：Spring基础构建</title><link>https://blog.chenkeyan.com/post/231125-bi-ji-%EF%BC%9ASpring-ji-chu-gou-jian.html</link><description>Q1：如何创建postgresql和mysql的Docker容器&#13;
&#13;
- 拉取镜像&#13;
&#13;
以mysql为例&#13;
&#13;
```shell&#13;
docker pull mysql&#13;
```&#13;
&#13;
- 创建并启动容器&#13;
&#13;
```shell&#13;
docker run --name mysql -e MYSQL_ROOT_PASSWORD=123456 -p 3306:3306 -d mysql&#13;
```&#13;
&#13;
注意：&#13;
&#13;
- 配置e，这是镜像需要的一些参数&#13;
- 配置p，将容器的端口映射到本地，不然只能用容器的ip去访问&#13;
&#13;
Q2：maven引入mysql-connector-java报错Cannot find class:com.mysql.jdbc.Drive&#13;
&#13;
版本问题，换个高版本的。</description><guid isPermaLink="true">https://blog.chenkeyan.com/post/231125-bi-ji-%EF%BC%9ASpring-ji-chu-gou-jian.html</guid><pubDate>Tue, 05 Dec 2023 13:12:47 +0000</pubDate></item><item><title>230908笔记：React表单双向绑定</title><link>https://blog.chenkeyan.com/post/230908-bi-ji-%EF%BC%9AReact-biao-dan-shuang-xiang-bang-ding.html</link><description>当使用 React 来创建表单时，我们可以像 Vue.js 一样实现双向绑定。</description><guid isPermaLink="true">https://blog.chenkeyan.com/post/230908-bi-ji-%EF%BC%9AReact-biao-dan-shuang-xiang-bang-ding.html</guid><pubDate>Tue, 05 Dec 2023 13:11:28 +0000</pubDate></item><item><title>230907笔记：Django Docker</title><link>https://blog.chenkeyan.com/post/230907-bi-ji-%EF%BC%9ADjango%20Docker.html</link><description>记录一下吧，遇到了一个很奇怪的问题。</description><guid isPermaLink="true">https://blog.chenkeyan.com/post/230907-bi-ji-%EF%BC%9ADjango%20Docker.html</guid><pubDate>Tue, 05 Dec 2023 13:11:02 +0000</pubDate></item><item><title>230906笔记：WordPress Docker部署</title><link>https://blog.chenkeyan.com/post/230906-bi-ji-%EF%BC%9AWordPress%20Docker-bu-shu.html</link><description>最近需要部署一个wordpress到服务器上，因为我觉得php安装不像python那样熟悉和方便，另外我感觉好像会自动占用80端口，就不是很想在原生系统上安装php，准备用一个docker跑wordpress。</description><guid isPermaLink="true">https://blog.chenkeyan.com/post/230906-bi-ji-%EF%BC%9AWordPress%20Docker-bu-shu.html</guid><pubDate>Tue, 05 Dec 2023 13:10:37 +0000</pubDate></item><item><title>230904笔记: BoxInst</title><link>https://blog.chenkeyan.com/post/230904-bi-ji-%3A%20BoxInst.html</link><description># BoxInst官方代码&#13;
https://github.com/aim-uofa/AdelaiDet&#13;
&#13;
# Q1：安装官方的包时报错THC/THC.h 相关头文件找不到&#13;
原因PyTorch新版本移除了相关的实现，解决办法，去其它仓库找以适配好的代码。</description><guid isPermaLink="true">https://blog.chenkeyan.com/post/230904-bi-ji-%3A%20BoxInst.html</guid><pubDate>Tue, 05 Dec 2023 13:09:36 +0000</pubDate></item><item><title>230821笔记: html table</title><link>https://blog.chenkeyan.com/post/230821-bi-ji-%3A%20html%20table.html</link><description>## 1. Table Text Alignment&#13;
&#13;
```scss&#13;
th {&#13;
  text-align: center;&#13;
  vertical-align: middle;&#13;
}&#13;
```&#13;
&#13;
The `vertical-align` property sets the vertical alignment of the content in `&lt;th&gt;` or `&lt;td&gt;` (such as top, bottom, or middle).&#13;
&#13;
By default, the vertical alignment of content in a table is `middle`.&#13;
&#13;
## 2. **box-sizing**&#13;
&#13;
When an element is set to `box-sizing: border-box;`, its padding and border no longer increase its width.&#13;
&#13;
## 3. How to Hide Table Borders&#13;
&#13;
Set `border-top`, `border-left`, `border-bottom`, and `border-right` of `th` and `td` to `none`.&#13;
&#13;
## 4. CSS Calculation&#13;
&#13;
`calc()`&#13;
&#13;
## 5. Horizontal Scrolling for Tables&#13;
&#13;
```scss&#13;
.container1{&#13;
	width: 1000px;&#13;
}&#13;
&#13;
.container2{&#13;
  position: relative;&#13;
  overflow: auto;&#13;
  white-space: nowrap;&#13;
}&#13;
```&#13;
&#13;
```html&#13;
&lt;div class="container1"&gt;&#13;
	&lt;div class="container2"&gt;&#13;
			&lt;table&gt;&#13;
				&lt;tbody&gt;...&lt;/tbody&gt;&#13;
			&lt;/table&gt;&#13;
	&lt;/div&gt;&#13;
&lt;/div&gt;&#13;
```&#13;
&#13;
## 6. Frozen Columns in Tables&#13;
&#13;
```scss&#13;
.sticky-col {&#13;
  position: sticky;&#13;
	left: 0;&#13;
}&#13;
```&#13;
&#13;
## 7. Multi-Row and Multi-Column Table Headers&#13;
&#13;
```scss&#13;
&lt;th rowSpan={1} colSpan={1} &gt;&#13;
...&#13;
&lt;/th&gt;&#13;
```&#13;
&#13;
Use the `row-span` and `col-span` attributes.&#13;
&#13;
## 8. Mixing Multi-Row and Multi-Column Table Headers&#13;
&#13;
```scss&#13;
&lt;thead&gt;&#13;
	&lt;tr&gt;&#13;
		&lt;th rowSpan={1} colSpan={1} &gt;&#13;
		...&#13;
		&lt;/th&gt;&#13;
	&lt;/tr&gt;&#13;
	&lt;tr&gt;&#13;
	&lt;th rowSpan={1} colSpan={1} &gt;&#13;
	...&#13;
	&lt;/th&gt;&#13;
	&lt;/tr&gt;&#13;
&lt;/thead&gt;&#13;
```&#13;
&#13;
Calculate the positions of rows and columns that span multiple cells in advance, and the second row of headers will automatically appear in the reserved space.&#13;
&#13;
## 9. Fixed Width for Table Content&#13;
&#13;
```scss&#13;
&lt;th&gt;&#13;
	&lt;div style="widh: 220px"&gt;...&lt;/div&gt;&#13;
&lt;/th&gt;&#13;
```&#13;
&#13;
Nest a `&lt;div&gt;` element to achieve a fixed width.&#13;
。</description><guid isPermaLink="true">https://blog.chenkeyan.com/post/230821-bi-ji-%3A%20html%20table.html</guid><pubDate>Tue, 05 Dec 2023 13:09:04 +0000</pubDate></item><item><title>230820笔记: About pnpm</title><link>https://blog.chenkeyan.com/post/230820-bi-ji-%3A%20About%20pnpm.html</link><description>pnpm&#13;
- Official website&#13;
    - https://pnpm.io/&#13;
- Advantages&#13;
    - Fast&#13;
    - Efficient&#13;
        - Files in node_modules are copied or linked from a specific content-addressable storage repository.&#13;
    - Supports monorepos&#13;
        - Monorepo means that all the code of all projects is maintained in a single code version repository.&#13;
        - pnpm has built-in support for multiple packages in a single repository.&#13;
![image](https://github.com/Geekiter/blog-issue/assets/20443506/5b744a6a-551f-47df-a073-da9bcb50bff6)&#13;
&#13;
- Differences from npm and yarn&#13;
    - npm3+ and yarn manage node_modules through a flattened way, which solves some problems of nested ways, but introduces the problem of ghost dependencies, and only one version of the same package will be promoted, and the rest of the versions will still be copied multiple times.&#13;
    - pnpm hard links from the global store to node_modules/.pnpm, and then organizes the dependency relationship between them through soft links.&#13;
。</description><guid isPermaLink="true">https://blog.chenkeyan.com/post/230820-bi-ji-%3A%20About%20pnpm.html</guid><pubDate>Tue, 05 Dec 2023 13:08:27 +0000</pubDate></item><item><title>Hello, world.</title><link>https://blog.chenkeyan.com/post/Hello%2C%20world..html</link><description>this article is created by github issue.。</description><guid isPermaLink="true">https://blog.chenkeyan.com/post/Hello%2C%20world..html</guid><pubDate>Fri, 01 Dec 2023 02:25:21 +0000</pubDate></item></channel></rss>